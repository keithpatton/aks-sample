parameters:
- name: svcConnAzureRm
  type: string  
- name: region
  type: string
- name: env
  type: string
- name: dependsOn  
  type: object
- name: apply
  type: boolean

stages:
- stage: ${{ parameters.region }}_${{ parameters.env }}
  displayName: ${{ parameters.region }}_${{ parameters.env }}
  variables: 
    - template: ../variables/reg-env.yml 
      parameters:
        region: ${{ parameters.region }}
        env: ${{ parameters.env }}
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: ubuntu-latest 
  jobs:
  - deployment: Infrastructure
    condition: eq('${{ parameters.apply }}', 'true')
    displayName: Ensure App Specific Infra
    environment: ${{ parameters.region }}_${{ parameters.env }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true                                   
          - template:  ../../../../common/templates/steps/vars-reg-env-set.yml        
            parameters:
              region: ${{ parameters.region }}
              env: ${{ parameters.env }}        
              groupsDataFilePath: $(groupsDataFilePath)   
              ringsDataFilePath: $(ringsDataFilePath)                    
          - template:  ../../../../common/templates/steps/vars-tenants-set.yml   
            parameters:
              region: ${{ parameters.region }}
              env: ${{ parameters.env }}  
              tenantsDataPaths: $(tenantsDataPaths)
              requiredData: $(tenantsRequiredData)                      
          - template: ../../../../common/templates/steps/vars-replace-tokens.yml
            parameters:
              targetFiles: devops/app/terraform/variables.tf
          - template: ../../../../common/templates/steps/agent-sql-access.yml
            parameters:
              svcConnAzureRm: ${{ parameters.svcConnAzureRm }}
          - template: ../../../../common/templates/steps/tf-init-az.yml
            parameters:
              svcConnAzureRm: ${{ parameters.svcConnAzureRm }}
              workingDirectory: '$(System.DefaultWorkingDirectory)/devops/app/terraform'
          - template: ../../../../common/templates/steps/tf-apply-az.yml
            parameters:
              svcConnAzureRm: ${{ parameters.svcConnAzureRm }}
              workingDirectory: '$(System.DefaultWorkingDirectory)/devops/app/terraform'  
  - deployment: Deploy    
    dependsOn: Infrastructure
    condition: in(dependencies.Infrastructure.result, 'Succeeded', 'Skipped')
    displayName: Deploy Application
    environment: ${{ parameters.region }}_${{ parameters.env }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true   
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'env | sort'                 
          - template:  ../../../../common/templates/steps/vars-reg-env-set.yml        
            parameters:
              region: ${{ parameters.region }}
              env: ${{ parameters.env }}  
              groupsDataFilePath: $(groupsDataFilePath)   
              ringsDataFilePath: $(ringsDataFilePath)                 
          - template:  ../../../../common/templates/steps/vars-tenants-set.yml   
            parameters:
              region: ${{ parameters.region }}
              env: ${{ parameters.env }}  
              tenantsDataPaths: $(tenantsDataPaths)
              requiredData: $(tenantsRequiredData)           
          - task: AzureCLI@2
            displayName: Get Azure Managed Workload Identities
            inputs:
              azureSubscription: ${{ parameters.svcConnAzureRm}}
              scriptType: bash
              scriptLocation: 'inlineScript'
              inlineScript: |
                aksManagedIdentities=$(az identity list -g $(rgName) --query "[?starts_with(name,'$(aksWorkloadIdentityNamePrefix)')].{client_id: clientId, name: name}" -o json | jq -c '.')
                echo "##vso[task.setvariable variable=aksManagedIdentities;]$aksManagedIdentities"
                echo $vars-replace-tokens
          - template: ../../../../common/templates/steps/vars-replace-tokens.yml
            parameters:
              targetFiles: |
                devops/app/helm/**/Chart.yaml
                devops/app/helm/**/values.yaml            
          - template: ../../../../common/templates/steps/helm-upgrade.yml
            parameters:
              svcConnAzureRm: ${{ parameters.svcConnAzureRm }}
              releaseName: $(helmReleaseName)
              chartPath: '$(System.DefaultWorkingDirectory)/devops/app/helm/$(appName)'
              namespace: $(helmReleaseNamespace)